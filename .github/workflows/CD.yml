name: RAG Chatbot CD to Hugging Face

on:
  workflow_run:
    workflows: ["RAG Chatbot CI"]
    branches: [main, master]
    types:
      - completed
  # Optional: Enable manual deployment
  workflow_dispatch:

jobs:
  deploy-to-huggingface:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Hugging Face
        run: |
          pip install huggingface_hub
          # Create HF credentials file directly
          mkdir -p ~/.huggingface
          echo "{ \"api_key\": \"${{ secrets.HF_TOKEN }}\" }" > ~/.huggingface/token
      
      - name: Create Dockerfile for Hugging Face
        run: |
          cat > Dockerfile << EOL
          FROM python:3.10-slim

          WORKDIR /app

          # Install system dependencies
          RUN apt-get update && apt-get install -y \\
              build-essential \\
              curl \\
              software-properties-common \\
              git \\
              && rm -rf /var/lib/apt/lists/*

          # Copy requirements first for better caching
          COPY requirements.txt .
          RUN pip install --no-cache-dir -r requirements.txt

          # Copy application code
          COPY . .

          # Create a non-root user to run the app
          RUN useradd -m appuser && \\
              # Create directories with appropriate permissions
              mkdir -p /tmp/chat_data/logs /tmp/chat_data/knowledge_base && \\
              chown -R appuser:appuser /app /tmp/chat_data

          # Set environment variables
          ENV RAG_PATH_CHAT_DATA=/tmp/chat_data
          ENV RAG_PATH_CHAT_DATA_LOGS=/tmp/chat_data/logs
          ENV RAG_PATH_CHAT_DATA_KNOWLEDGE_BASE=/tmp/chat_data/knowledge_base
          ENV PORT=7860
          ENV PYTHONPATH=/app

          # Switch to non-root user
          USER appuser

          # Expose the port Streamlit will run on
          EXPOSE 7860

          # Run the app
          CMD ["python", "run_app.py"]
          EOL
      
      - name: Create Hugging Face Space README
        run: |
          cat > README.md << EOL
          ---
          title: RAG Chatbot
          emoji: ðŸ¤–
          colorFrom: blue
          colorTo: indigo
          sdk: docker
          app_port: 7860
          pinned: false
          ---
          
          # RAG Chatbot
          
          This is a Retrieval-Augmented Generation (RAG) chatbot deployed on Hugging Face Spaces.
          
          ## Features
          - Document-based question answering
          - Chat memory and history
          - Powered by Google Generative AI (Gemini)
          
          ## Environment Variables
          
          To use this application, you'll need to set the following environment variable in your Hugging Face Space:
          
          - \`GEMINI_API_KEY\`: Your Google AI Studio API key
          
          You can set this in the Space Settings > Repository secrets section.
          EOL
      
      - name: Push to Hugging Face Space
        env:
          HF_SPACE_NAME: ${{ secrets.HF_SPACE_NAME }}
          HF_USERNAME: ${{ secrets.HF_USERNAME }}
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          
          # Clone the Hugging Face Space repo (or create it if it doesn't exist)
          if ! git clone https://huggingface.co/spaces/$HF_USERNAME/$HF_SPACE_NAME repo; then
            mkdir -p repo
            cd repo
            git init
            git remote add origin https://huggingface.co/spaces/$HF_USERNAME/$HF_SPACE_NAME
            cd ..
          fi
          
          # Copy necessary files
          cp -r rag_app repo/
          cp run_app.py repo/
          cp requirements.txt repo/
          cp fix_project_structure.py repo/
          cp Dockerfile repo/
          cp README.md repo/
          
          # Create a simple app.py that imports run_app.py
          echo "import run_app" > repo/app.py
          
          # Create .gitattributes for LFS
          echo "*.bin filter=lfs diff=lfs merge=lfs -text" > repo/.gitattributes
          
          # Create Docker configuration for Hugging Face
          mkdir -p repo/.config/huggingface
          cat > repo/.config/huggingface/settings.json << EOL
          {
            "docker_enabled": true
          }
          EOL
          
          # Commit and push changes
          cd repo
          git add .
          git commit -m "Update Space with latest RAG Chatbot"
          git push -f https://${{ secrets.HF_USERNAME }}:${{ secrets.HF_TOKEN }}@huggingface.co/spaces/$HF_USERNAME/$HF_SPACE_NAME main
      
      - name: Wait for deployment and post status
        run: |
          echo "Deploying to Hugging Face Space: https://huggingface.co/spaces/${{ secrets.HF_USERNAME }}/${{ secrets.HF_SPACE_NAME }}"
          echo "Deployment triggered! It may take a few minutes to complete."
          echo "IMPORTANT: Remember to set GEMINI_API_KEY in your Hugging Face Space settings."