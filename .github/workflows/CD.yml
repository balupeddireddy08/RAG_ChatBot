name: RAG Chatbot CD to Hugging Face

on:
  workflow_run:
    workflows: ["RAG Chatbot CI"]
    branches: [main, master]
    types:
      - completed
  # Optional: Enable manual deployment
  workflow_dispatch:

jobs:
  deploy-to-huggingface:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Hugging Face
        run: |
          pip install huggingface_hub
          # Create HF credentials file directly
          mkdir -p ~/.huggingface
          echo "{ \"api_key\": \"${{ secrets.HF_TOKEN }}\" }" > ~/.huggingface/token
      
      - name: Create Dockerfile for Hugging Face
        run: |
          cat > Dockerfile.hf << EOL
          FROM ${{ secrets.DOCKERHUB_USERNAME }}/rag-chatbot:latest

          # Use Hugging Face's standard port
          EXPOSE 7860
          
          # Set environment variables
          ENV GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          ENV PORT=7860
          
          # Use startup command
          CMD ["python", "run_app.py"]
          EOL
      
      - name: Create Hugging Face Space README
        run: |
          cat > README.md << EOL
          # RAG Chatbot
          
          This is a Retrieval-Augmented Generation (RAG) chatbot deployed on Hugging Face Spaces.
          
          ## Features
          - Document-based question answering
          - Chat memory and history
          - Powered by Gemini API
          EOL
      
      - name: Push to Hugging Face Space
        env:
          HF_SPACE_NAME: ${{ secrets.HF_SPACE_NAME }}
          HF_USERNAME: ${{ secrets.HF_USERNAME }}
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          
          # Clone the Hugging Face Space repo (or create it if it doesn't exist)
          if ! git clone https://huggingface.co/spaces/$HF_USERNAME/$HF_SPACE_NAME repo; then
            mkdir -p repo
            cd repo
            git init
            git remote add origin https://huggingface.co/spaces/$HF_USERNAME/$HF_SPACE_NAME
            cd ..
          fi
          
          # Copy necessary files
          cp Dockerfile.hf repo/Dockerfile
          cp README.md repo/README.md
          
          # Create a simple app.py that imports run_app.py
          echo "import run_app" > repo/app.py
          
          # Create .gitattributes for LFS
          echo "*.bin filter=lfs diff=lfs merge=lfs -text" > repo/.gitattributes
          
          # Create Docker configuration for Hugging Face
          mkdir -p repo/.config/huggingface
          cat > repo/.config/huggingface/settings.json << EOL
          {
            "docker_enabled": true
          }
          EOL
          
          # Commit and push changes
          cd repo
          git add .
          git commit -m "Update Space with latest RAG Chatbot"
          git push -f https://${{ secrets.HF_USERNAME }}:${{ secrets.HF_TOKEN }}@huggingface.co/spaces/$HF_USERNAME/$HF_SPACE_NAME main
      
      - name: Wait for deployment and post status
        run: |
          echo "Deploying to Hugging Face Space: https://huggingface.co/spaces/${{ secrets.HF_USERNAME }}/${{ secrets.HF_SPACE_NAME }}"
          echo "Deployment triggered! It may take a few minutes to complete."